# Let's put both vectors into a tibble:
df <- tibble(gender, pitch = c(female, male))
rm(gender)
ls()
# Bodo Winter
# June 29, 2022
# F0 as a function of gender
# Let's load the tidyverse:
library(tidyverse)
# Let's create female and male F0 values:
female <- rnorm(50, mean = 210, sd = 20)
male <- rnorm(50, mean = 110, sd = 20)
# We need gender identifiers:
gender <- c('female', 'male')
gender <- rep(gender, each = 50)
# Let's put both vectors into a tibble:
df <- tibble(gender, pitch = c(female, male))
df
summarize(df, M = mean(pitch))
summarize(df, M = mean(pitch), SD = sd(pitch))
df %>%
summarize(M = mean(pitch), SD = sd(pitch))
df %>%
group_by() %>%
summarize(M = mean(pitch), SD = sd(pitch))
df %>%
group_by(gender) %>%
summarize(M = mean(pitch), SD = sd(pitch))
df %>%
group_by(gender)
avgs <- df %>%
group_by(gender) %>%
summarize(M = mean(pitch), SD = sd(pitch))
avgs
avgs %>%
ggplot()
avgs %>%
ggplot() +
geom_col()
avgs
avgs %>%
ggplot(aes(x = gender, y = M)) +
geom_col()
avgs %>%
ggplot(aes(x = gender, y = M, col = gender)) +
geom_col()
avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col()
avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col(col = 'black')
avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col(col = 'black') +
theme_classic()
avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col(col = 'black', width = 0.6) +
theme_classic()
avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col(col = 'black', width = 0.6) +
xlab('') +
theme_classic()
avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col(col = 'black', width = 0.6) +
xlab(NULL) +
theme_classic()
avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col(col = 'black', width = 0.6) +
xlab(NULL) +
ylab('Fundamental frequency (F0)') +
theme_classic()
avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col(col = 'black', width = 0.6) +
xlab(NULL) +
ylab('Fundamental frequency (F0)') +
theme_classic() +
theme(legend.position = 'top')
avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col(col = 'black', width = 0.6) +
xlab(NULL) +
ylab('Fundamental frequency (F0)') +
theme_classic() +
theme(legend.position = 'left')
avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col(col = 'black', width = 0.6) +
xlab(NULL) +
ylab('Fundamental frequency (F0)') +
theme_classic() +
theme(legend.position = 'bottom')
avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col(col = 'black', width = 0.6) +
xlab(NULL) +
ylab('Fundamental frequency (F0)') +
theme_classic() +
theme(legend.position = 'none')
source("~/travel_talk/2022/korea/materials/scripts/F0_gender.R", echo=TRUE)
source("~/travel_talk/2022/korea/materials/scripts/F0_gender.R", echo=TRUE)
source("~/travel_talk/2022/korea/materials/scripts/F0_gender.R", echo=TRUE)
avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col(col = 'black', width = 0.6) +
xlab(NULL) +
ylab('Fundamental frequency (F0)') +
theme_classic() +
theme(legend.position = 'none')
?theme
source("~/travel_talk/2022/korea/materials/scripts/F0_gender.R", echo=TRUE)
avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col(col = 'black', width = 0.6) +
xlab(NULL) +
ylab('Fundamental frequency (F0)') +
theme_classic() +
theme(legend.position = 'none')
colors()
avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col(col = 'black', width = 0.6) +
scale_fill_manual(values = c('steelblue', 'goldenrod3')) +
xlab(NULL) +
ylab('Fundamental frequency (F0)') +
theme_classic() +
theme(legend.position = 'none')
source("~/travel_talk/2022/korea/materials/scripts/F0_gender.R", echo=TRUE)
avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col(col = 'black', width = 0.6) +
scale_fill_manual(values = c('steelblue', 'goldenrod3')) +
scale_y_continuous(limits = c(0, 250),
expand = c(0, 0)) +
xlab(NULL) +
ylab('Fundamental frequency (F0)') +
theme_classic() +
theme(legend.position = 'none')
ggsave('my_beautiful_barplot.pdf')
getwd()
ggsave('my_beautiful_barplot.pdf',
width = 3, height = 4.5)
p <- avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col(col = 'black', width = 0.6) +
scale_fill_manual(values = c('steelblue', 'goldenrod3')) +
scale_y_continuous(limits = c(0, 250),
expand = c(0, 0)) +
xlab(NULL) +
ylab('Fundamental frequency (F0)') +
theme_classic() +
theme(legend.position = 'none')
p
p
p
p
p
p
p
p
p
p
p <- avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col(col = 'black', width = 0.6)
p
p <- avgs %>%
ggplot(aes(x = gender, y = M, fill = gender)) +
geom_col(col = 'black', width = 0.6)
p <- p +
scale_fill_manual(values = c('steelblue', 'goldenrod3')) +
scale_y_continuous(limits = c(0, 250),
expand = c(0, 0)) +
xlab(NULL) +
ylab('Fundamental frequency (F0)')
df %>%
ggplot(aes(x = gender, y = pitch)) +
geom_boxplot()
df %>%
ggplot(aes(x = gender, y = pitch)) +
geom_violin()
df %>%
ggplot(aes(x = gender, y = pitch)) +
geom_violin() +
geom_boxplot()
avgs
df
source("~/travel_talk/2022/korea/materials/scripts/F0_gender.R", echo=TRUE)
df %>%
ggplot(aes(x = gender, y = pitch)) +
geom_violin()
df %>%
ggpot(aes(x = pitch)) +
geom_density()
df %>%
ggplot(aes(x = pitch)) +
geom_density()
df %>%
ggplot(aes(x = pitch, fill = gender)) +
geom_density()
df %>%
ggplot(aes(x = pitch, fill = gender)) +
geom_density(alpha = 0)
df %>%
ggplot(aes(x = pitch, fill = gender)) +
geom_density(alpha = 1)
df %>%
ggplot(aes(x = pitch, fill = gender)) +
geom_density(alpha = 0.6)
df %>%
ggplot(aes(x = pitch, fill = gender)) +
geom_histogram(alpha = 0.6)
df %>%
ggplot(aes(x = pitch, fill = gender)) +
geom_density(alpha = 0.6)
df
df %>%
ggplot(aes(x = pitch)) +
geom_density(alpha = 0.6, fill = 'steelblue')
getwd()
R.Version()
R.Version()
library(tidyverse)
library(brms)
library(tidybayes)
library(tidyverse)
library(brms)
library(tidybayes)
load('/Users/bodowinter/travel_talk/2022/korea/materials/models/wednesday_mdl_new.RData')
library(rstudioapi)
?pacman
install.packages('pacman')
library(sf)
install.packages('tidyverse')
install.packages('lme4')
install.packages('pacman')
install.packages('here')
install.packages('ggbeeswarm')
install.packages('MASS')
install.packages('broom')
install.packages('broom.mixed')
install.packages('pscl')
install.packages('effects')
install.packages('MuMIn')
install.packages('lme4')
install.packages('afex')
install.packages('bayesplot')
install.packages('lme4')
install.packages('mgcv')
install.packages('itsadug')
install.packages('tree')
install.packages('rpart')
install.packages('ranger')
install.packages('caret')
install.packages('party')
install.packages('partykit')
install.packages('permimp')
install.packages('vip')
install.packages('flashlight')
install.packages('mlr')
install.packages('tuneRanger')
install.packages('languageR')
install.packages('RCurl')
install.packages('reshape2')
install.packages('randomForest')
install.packages('edarf')
install.packages('RCurl')
install.packages('gridExtra')
install.packages('factoextra')
install.packages('mclust')
install.packages('daisy')
install.packages('pvclust')
install.packages('maps')
install.packages('rworldmap')
install.packages('sf')
install.packages('sf')
install.packages('lavaan')
install.packages('semPlot')
install.packages('MVN')
install.packages('car')
install.packages('lattice')
install.packages('openxlsx')
install.packages('tidytext')
install.packages('textstem')
install.packages('wordcloud')
install.packages('viridis')
install.packages('sentiment')
install.packages('sentimentr')
install.packages('tidybayes')
install.packages('shinystan')
install.packages('broom.mixed')
install.packages('modelr')
R.Version()
library(tidyverse)
set.seed(66)
# First version
x <- rnorm(100, mean = mean(c(47.5, 49)), sd = 3)
df <- tibble(feet = x)
clip_fac <- 2
df %>%
ggplot(aes(x = feet)) +
geom_density(fill = '#67399a',
color = 'white') +
coord_cartesian(xlim = c(40 - clip_fac, 58 + clip_fac),
ylim = c(0, 0.3)) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0), breaks = seq(40, 58, 4)) +
theme_classic() +
theme(panel.background = element_rect(fill = 'transparent',
color = NA),
plot.background = element_rect(fill = 'transparent',
color = NA),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(color = 'white',
face = 'bold',
size = 14),
axis.title.x = element_blank(),
axis.line.x = element_line(color = 'white'),
axis.ticks.x = element_line(color = 'white'))
set.seed(66)
x <- rnorm(100, mean = mean(c(47.5, 49)), sd = 4)
df <- tibble(feet = x)
clip_fac <- 2
df %>%
ggplot(aes(x = feet)) +
geom_density(fill = '#67399a',
color = 'white') +
coord_cartesian(xlim = c(-2 - clip_fac, 70 + clip_fac),
ylim = c(0, 0.3)) +
geom_vline(xintercept = 0, linetype = 'dashed',
col = 'white') +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0),
breaks = seq(0, 60, 20)) +
theme_classic() +
theme(panel.background = element_rect(fill = 'transparent',
color = NA),
plot.background = element_rect(fill = 'transparent',
color = NA),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(color = 'white',
face = 'bold',
size = 14),
axis.title.x = element_blank(),
axis.line.x = element_line(color = 'white'),
axis.ticks.x = element_line(color = 'white'))
ggsave('/Users/bodowinter/travel_talk/2022/distance_summer_school/null_point.pdf',
width = 4, height = 2.5)
0.34 + 0.34
0.34 + 0.34 + 13.5 + 13.5
0.34 + 0.34 + 0.135 + 0.135
2.3 * 0.3
3 * 4
c(5.2, 5.2, 5.5)
sd(c(5.2, 5.2, 5.5))
(c(5.2, 5.2, 5.5) - 5.3) ^ 2
sum((c(5.2, 5.2, 5.5) - 5.3) ^ 2)
sum((c(5.2, 5.2, 5.5) - 5.3) ^ 2) / 2
sqrt(sum((c(5.2, 5.2, 5.5) - 5.3) ^ 2) / 2)
## Compile all data into one:
library(tidyverse)
## Set working to where all raw files are and get filenames:
setwd('/Users/bodowinter/research/birds_cleaned/analysis/data/raw_data/')
filenames <- list.files()
##
## Compile all data into one:
library(tidyverse)
## Set working to where all raw files are and get filenames:
setwd('/Users/bodowinter/research/birds_cleaned/analysis/data/raw_data/')
filenames <- list.files()
## Loop through and get all files:
df <- c()
for (i in seq_along(filenames)) {
x <- read_csv(filenames[i])
x <- select(x, EnglishCommon, Species, Length, Voice)
x$fieldguide <- filenames[i]
df <- rbind(df, x)
}
i
i <- 1
x <- read_csv(filenames[i])
## Compile all data into one:
library(tidyverse)
## Set working to where all raw files are and get filenames:
setwd('/Users/bodowinter/research/birds_cleaned/analysis/data/raw_data/')
filenames <- list.files()
## Loop through and get all files:
df <- c()
for (i in seq_along(filenames)) {
x <- read_csv(filenames[i])
x <- select(x, EnglishCommon, LatinSpecies, Length, Voice)
x$fieldguide <- filenames[i]
df <- rbind(df, x)
}
i
filenames[i]
## Compile all data into one:
library(tidyverse)
## Set working to where all raw files are and get filenames:
setwd('/Users/bodowinter/research/birds_cleaned/analysis/data/raw_data/')
filenames <- list.files()
## Loop through and get all files:
df <- c()
for (i in seq_along(filenames)) {
x <- read_csv(filenames[i])
if ('Length' %in% colnames(x)) {
x <- select(x, EnglishCommon, LatinSpecies, Voice, Length)
} else {
x <- select(x, EnglishCommon, LatinSpecies, Voice)
x$Length <- NA
}
x$fieldguide <- filenames[i]
df <- rbind(df, x)
}
i
filenames[i]
## Compile all data into one:
library(tidyverse)
## Set working to where all raw files are and get filenames:
setwd('/Users/bodowinter/research/birds_cleaned/analysis/data/raw_data/')
filenames <- list.files()
## Loop through and get all files:
df <- c()
for (i in seq_along(filenames)) {
x <- read_csv(filenames[i])
if ('Length' %in% colnames(x)) {
x <- select(x, EnglishCommon, LatinSpecies, Voice, Length)
} else {
x <- select(x, EnglishCommon, LatinSpecies, Voice)
x$Length <- NA
}
x$fieldguide <- filenames[i]
df <- rbind(df, x)
}
i
## Compile all data into one:
library(tidyverse)
## Set working to where all raw files are and get filenames:
setwd('/Users/bodowinter/research/birds_cleaned/analysis/data/raw_data/')
filenames <- list.files()
## Loop through and get all files:
df <- c()
for (i in seq_along(filenames)) {
x <- read_csv(filenames[i])
if ('Length' %in% colnames(x)) {
x <- select(x, EnglishCommon, LatinSpecies, Voice, Length)
} else {
x <- select(x, EnglishCommon, LatinSpecies, Voice)
x$Length <- NA
}
x$fieldguide <- filenames[i]
df <- rbind(df, x)
}
i
filenames[i]
## Compile all data into one:
library(tidyverse)
## Set working to where all raw files are and get filenames:
setwd('/Users/bodowinter/research/birds_cleaned/analysis/data/raw_data/')
filenames <- list.files()
## Loop through and get all files:
df <- c()
for (i in seq_along(filenames)) {
x <- read_csv(filenames[i])
if ('Length' %in% colnames(x)) {
x <- select(x, EnglishCommon, LatinSpecies, Voice, Length)
} else {
x <- select(x, EnglishCommon, LatinSpecies, Voice)
x$Length <- NA
}
x$fieldguide <- filenames[i]
df <- rbind(df, x)
}
df
## Compile all data into one:
library(tidyverse)
## Set working to where all raw files are and get filenames:
setwd('/Users/bodowinter/research/birds_cleaned/analysis/data/raw_data/')
filenames <- list.files()
## Loop through and get all files:
df <- c()
for (i in seq_along(filenames)) {
x <- read_csv(filenames[i])
if ('Length' %in% colnames(x)) {
x <- select(x, EnglishCommon, LatinSpecies, Voice, Length)
} else {
x <- select(x, EnglishCommon, LatinSpecies, Voice)
x$Length <- NA
}
x$fieldguide <- filenames[i]
df <- rbind(df, x)
}
# Rename and re-order columns:
df <- df %>%
rename(english_common = EnglishCommon,
latin = LatinSpecies,
voice = Voice,
length = Length) %>%
select(fieldguide, english_common, latin, length, voice)
df
write_csv(df, '../voice_all_guides.csv')
